const getRecordValues = Object.values;
const getRecordKeys = Object.keys;
const getRecordEntries = Object.entries;
const createFullRecordFromEntries = Object.fromEntries;
const createPartialRecordFromEntries = Object.fromEntries;
function createEnumKeyedRecord(enumObj, valueFunction) {
  return createFullRecordFromEntries(Object.values(enumObj).map((member) => [member, valueFunction(member)]));
}
export {
  createEnumKeyedRecord,
  createFullRecordFromEntries,
  createPartialRecordFromEntries,
  getRecordEntries,
  getRecordKeys,
  getRecordValues
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vc3JjL2xpYnMvUmVjb3JkLnRzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyIvLyBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vYml0YnVybmVyLW9mZmljaWFsL2JpdGJ1cm5lci1zcmMvZGV2L3NyYy9UeXBlcy9SZWNvcmQudHNcblxuLy8gU29tZSBleHRyYSB1dGlsaXR5IHRvIG1ha2UgUmVjb3JkcyB3aXRoIHN0cm9uZ2x5IHR5cGVkIGtleXMgKGUuZyBlbnVtIG1lbWJlciBrZXlzKSBzaW1wbGVyIHRvIHdvcmsgd2l0aCBpbiBUUy5cbi8vIFVzaW5nIG1hcHMgaW5zdGVhZCBvZiBwbGFpbiBvYmplY3RzIGlzIGFub3RoZXIgb3B0aW9uLCBidXQgbWFwcyByZXF1aXJlIGFuIGV4dHJhIHN0ZXAgdG8gY29udmVydCB0by9mcm9tIEpTT05cbi8vIFNvIHRoZXkgc2hvdWxkIG5vdCBiZSBvdmVydXNlZC5cblxuLyoqIEVhc2llciBzZW1hbnRpYyBuYW1lIGZvciBhIHBhcnRpYWwgcmVjb3JkICovXG5leHBvcnQgdHlwZSBQYXJ0aWFsUmVjb3JkPEsgZXh0ZW5kcyBzdHJpbmcsIFY+ID0gUGFydGlhbDxSZWNvcmQ8SywgVj4+O1xuXG4vKiogR2V0IHZhbHVlcyBmcm9tIGEgcGFydGlhbCByZWNvcmQgd2l0aCBwcm9wZXIgdHlwZSAqL1xuZXhwb3J0IGNvbnN0IGdldFJlY29yZFZhbHVlcyA9IE9iamVjdC52YWx1ZXMgYXMgPFY+KHJlY29yZDogUGFydGlhbFJlY29yZDxhbnksIFY+KSA9PiBWW107XG5cbi8qKiBHZXQgYSBrZXlzIGFycmF5IHdpdGggcHJvcGVyIHR5cGUuIE9iamVjdC5rZXlzIGJ5IGRlZmF1bHQgcmV0dXJucyBzdHJpbmdbXSAqL1xuZXhwb3J0IGNvbnN0IGdldFJlY29yZEtleXMgPSBPYmplY3Qua2V5cyBhcyA8SyBleHRlbmRzIHN0cmluZz4ocmVjb3JkOiBQYXJ0aWFsUmVjb3JkPEssIGFueT4pID0+IEtbXTtcblxuLyoqIEdldCBhbiBlbnRyaWVzIGFycmF5IHdpdGggcHJvcGVybHkgdHlwZWQga2V5cy4gT2JqZWN0LmVudHJpZXMgYnkgZGVmYXVsdCByZXByZXNlbnRzIGtleXMgYXMgc3RyaW5nICovXG5leHBvcnQgY29uc3QgZ2V0UmVjb3JkRW50cmllcyA9IE9iamVjdC5lbnRyaWVzIGFzIDxLIGV4dGVuZHMgc3RyaW5nLCBWPihyZWNvcmQ6IFBhcnRpYWxSZWNvcmQ8SywgVj4pID0+IFtLLCBWXVtdO1xuXG4vKiogVXNlIHRoaXMgZnVuY3Rpb24gb25seSB3aGVuIGVudHJpZXMgaXMgZ3VhcmFudGVlZCB0byBjb250YWluIGFsbCBtZW1iZXJzIG9mIEssXG4gKiBlLmcuIHdoZW4gaXQncyBhbiBhcnJheSBmcm9tIG1hcHBpbmcgdGhlIGVudW0gdmFsdWVzLCBvciB0aGUga2V5cyBmcm9tIGEgZGlmZmVyZW50IGZ1bGwgcmVjb3JkLlxuICogSWYgbm90IGFsbCBtZW1iZXJzIG9mIHR5cGUgSyBhcmUgdXNlZCwgdXNlIGNyZWF0ZVBhcnRpYWxSZWNvcmRGcm9tRW50cmllcyBpbnN0ZWFkLiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUZ1bGxSZWNvcmRGcm9tRW50cmllcyA9IE9iamVjdC5mcm9tRW50cmllcyBhcyA8SyBleHRlbmRzIHN0cmluZywgVj4oXG4gICAgZW50cmllczogW0ssIFZdW10sXG4pID0+IFJlY29yZDxLLCBWPjtcblxuLyoqIENyZWF0ZSBhIGNvcnJlY3RseSB0eXBlZCBvYmplY3QgZnJvbSBlbnRyaWVzIHdpdGggc3Ryb25nbHkgdHlwZWQga2V5cy5cbiAqIFRoaXMgaXMgc2FmZSB0byB1c2UgZXZlbiBpZiBub3QgYWxsIG1lbWJlcnMgb2YgdHlwZSBLIGFyZSBwcmVzZW50IGluIHRoZSBlbnRyaWVzLlxuICogSWYgYWxsIG1lbWJlcnMgb2YgSyBhcmUgZ3VhcmFudGVlZCB0byBiZSBwcmVzZW50LCBzZWUgY3JlYXRlRnVsbFJlY29yZEZyb21FbnRyaWVzLiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVBhcnRpYWxSZWNvcmRGcm9tRW50cmllcyA9IE9iamVjdC5mcm9tRW50cmllcyBhcyA8SyBleHRlbmRzIHN0cmluZywgVj4oXG4gICAgZW50cmllczogW0ssIFZdW10sXG4pID0+IFBhcnRpYWxSZWNvcmQ8SywgVj47XG5cbi8qKiBDcmVhdGUgYSBjb3JyZWN0bHktdHlwZWQgZnVsbCByZWNvcmQga2V5ZWQgYnkgYW4gZW51bSB3aXRoIHZhbHVlcyBiYXNlZCBvbiBhIHZhbHVlIGZ1bmN0aW9uXG4gKiBAcGFyYW0gZW51bU9iaiBUaGUgZW51bSBvYmplY3RcbiAqIEBwYXJhbSB2YWx1ZUZ1bmN0aW9uIFRoZSBmdW5jdGlvbiB3aGljaCB3aWxsIHByb2R1Y2UgdGhlIHZhbHVlLCB0YWtpbmcgaW4gdGhlIGtleSBhcyBhIHBhcmFtZXRlciAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVudW1LZXllZFJlY29yZDxLIGV4dGVuZHMgc3RyaW5nLCBWPihcbiAgICBlbnVtT2JqOiBSZWNvcmQ8c3RyaW5nLCBLPixcbiAgICB2YWx1ZUZ1bmN0aW9uOiAoa2V5OiBLKSA9PiBWLFxuKTogUmVjb3JkPEssIFY+IHtcbiAgICByZXR1cm4gY3JlYXRlRnVsbFJlY29yZEZyb21FbnRyaWVzKE9iamVjdC52YWx1ZXMoZW51bU9iaikubWFwKChtZW1iZXIpID0+IFttZW1iZXIsIHZhbHVlRnVuY3Rpb24obWVtYmVyKV0pKTtcbn1cbiJdLAogICJtYXBwaW5ncyI6ICJBQVVPLE1BQU0sa0JBQWtCLE9BQU87QUFHL0IsTUFBTSxnQkFBZ0IsT0FBTztBQUc3QixNQUFNLG1CQUFtQixPQUFPO0FBS2hDLE1BQU0sOEJBQThCLE9BQU87QUFPM0MsTUFBTSxpQ0FBaUMsT0FBTztBQU85QyxTQUFTLHNCQUNaLFNBQ0EsZUFDWTtBQUNaLFNBQU8sNEJBQTRCLE9BQU8sT0FBTyxPQUFPLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLGNBQWMsTUFBTSxDQUFDLENBQUMsQ0FBQztBQUM5RzsiLAogICJuYW1lcyI6IFtdCn0K
